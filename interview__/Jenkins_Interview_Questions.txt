1. What is Jenkins
 Jenkins is an open source automation server. Jenkins is a continuous integration tool developed in Java. 
Jenkins helps to automate the non-human part of software development process, with continuous integration 
and facilitating technical aspects of continuous delivery.

2. What is the difference between Jenkins and Hudson

Jenkins is the new Hudson. It really is more like a rename, not a fork, 
since the whole development community moved to Jenkins. (Oracle is 
left sitting in a corner holding their old ball “Hudson“, but it’s just a soul-less project now.).
 In a nutshell Jenkins CI is the leading open-source continuous integration server.

3. What SCM tools does Jenkins support
4. How can you tell what version of Jenkins you are using?
5. What is continuous integration in Jenkins
Continuous integration is a process in which all development work is integrated as early as possible. The resulting artifacts are automatically created and tested. This process allows to identify errors as early as possible. Jenkins is a popular open source tool to perform continuous integration and build automation.



6. What are the pre-requisites for using Jenkins

7. How can you move or copy Jenkins from one server to another server


8. Commands to use to start Jenkins manually

9. What are the most useful plugins in Jenkins

10. How to create a Jenkins job and what are the types

11. What are the two components that Jenkins mainly integrate with?

12. What is the default session timeout value in Jenkins and How can you increase the session timeout value?


13. Explain about Jenkins security mechanism


14. How can you pass parameters from one job to another job in Jenkins?


15. Explain about build pipeline in Jenkins


16. How can someone execute the jobs in Jenkins without having permissions to execute the job?


17. How to re-execute a parameterized build job without entering the parameter values when the job fails? 
Note:- Job should not ask for parameters and it should run with the values of parameters that you entered during previous execution


18. How to install plugins in Jenkins


19. How can configure slaves/nodes in Jenkins


20. How to run jobs in slaves


Why do we use Jenkins?

Answer # Jenkins is an open-source continuous integration software tool 
written in the Java programming language for testing and reporting on 
isolated changes in a larger code base in real time. The Jenkins software 
enables developers to find and solve defects in a code base rapidly and to automate testing of their builds.

What is Maven and what is Jenkins?

Answer # Maven is a build tool, in short a successor of ant. It helps in build and version control. However, Jenkins is continuous integration system, where in maven is used for build. Jenkins can be used to automate the deployment process.

Why do we use Jenkins?

Answer # Jenkins is an open-source continuous integration software tool written in the Java programming language for testing and reporting on isolated changes in a larger code base in real time. The Jenkins software enables developers to find and solve defects in a code base rapidly and to automate testing of their builds.

What is Maven and what is Jenkins?

Answer # Maven is a build tool, in short a successor of ant. 
It helps in build and version control. However, 
Jenkins is continuous integration system, where in maven is used for build. 
Jenkins can be used to automate the deployment process.

